<!DOCTYPE html>
<html>
<head>
    <title>Chatbot Example</title>
    <style>
        /* Add your custom styling here */
        #messages-container {
            width: 400px;
            height: 300px;
            border: 1px solid #ddd;
            border-radius: 5px;
            overflow-y: scroll;
            padding: 10px;
            background-color: #f8f8f8;
            font-family: Arial, sans-serif;
            font-size: 14px;
            line-height: 1.5;
        }

        /* Style for user messages */
        .user-message {
            margin-bottom: 10px;
        }

        /* Style for chatbot messages */
        .chatbot-message {
            margin-bottom: 10px;
        }

        /* Style for message sender */
        .message-sender {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="messages-container"></div>
        <input type="text" id="user-input" placeholder="Type your message..." />
        <button id="send-button">Send</button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.24.0/axios.min.js"></script>
    <script>
        // OpenAI API configuration
        const apiKey = "YOUR_API_KEY"; // Replace with your OpenAI API key
        const apiUrl = "https://api.openai.com/v1/chat/completions"; // OpenAI model URL
        const model = "gpt-3.5-turbo";
        const temperature = 0.3;
        const maxTokens = 256;
        const messagesContainer = document.getElementById("messages-container");

        // Function to send a message to the OpenAI API and get a response
        async function getChatbotResponse(message) {
            const response = await axios.post(apiUrl, {
                messages: [
                    { role: "user", content: message }
                ],
                model,
                temperature,
                max_tokens: maxTokens
            }, {
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${apiKey}`
                }
            });

            return response.data.choices[0].message.content;
        }

        // Function to handle user input and display the conversation
        function handleUserInput() {
          const userInput = document.getElementById("user-input");
          const message = userInput.value;

          messagesContainer.innerHTML += `<p class="user-message"><span class="message-sender">Me:</span> ${message}</p>`;
          userInput.value = "";

          const trigger = "Menu:";
          const defaultMessage = "I'm sorry, but I couldn't find the information you're looking for.";
          const systemContext = "You are OrderBot, an automated service to collect orders for a pizza restaurant called Richard567. / You will first greet the user, / and then you will wait for the user instructions, so to start collecting the order, / then, when the user asks for an item, ask if it's a pickup or delivery. / You will then wait to collect the entire order, / at the end, you will summarize it and check for a final time if the customer wants to add anything else. / If it's a delivery, you ask for an address. / Finally you will collect the payment. / Make sure to clarify all options, extras, / and sizes to uniquely identify the item from the menu. / You respond in a short, very conversational friendly style";

          if (message.includes(trigger)) {
            google.script.run.withSuccessHandler((docsContent) => {
              getChatbotResponse(systemContext + ' ' + docsContent + ' ' + message)
                .then((response) => {
                  if (response.trim() === "") {
                    messagesContainer.innerHTML += `<p class="chatbot-message"><span class="message-sender">Assistant Richard:</span> ${defaultMessage}</p>`;
                  } else {
                    messagesContainer.innerHTML += `<p class="chatbot-message"><span class="message-sender">Assistant Richard:</span> ${response}</p>`;
                  }
                  messagesContainer.scrollTop = messagesContainer.scrollHeight;
                })
                .catch((error) => {
                  console.error("Error:", error);
                });
            }).getSystemContext();
          } else {
            getChatbotResponse(systemContext + ' ' + message)
              .then((response) => {
                messagesContainer.innerHTML += `<p class="chatbot-message"><span class="message-sender">Assistant Richard:</span> ${response}</p>`;
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
              })
              .catch((error) => {
                console.error("Error:", error);
              });
          }
        }

        // Attach event listeners
        document.getElementById("send-button").addEventListener("click", handleUserInput);

        document.getElementById("user-input").addEventListener("keydown", (event) => {
            if (event.key === "Enter") {
                handleUserInput();
            }
        });
    </script>
</body>
</html>
