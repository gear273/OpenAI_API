<!DOCTYPE html>
<html>
<head>
    <title>Chatbot Example</title>
    <style>
        /* Add your custom styling here */
        #messages-container {
            width: 400px;
            height: 300px;
            border: 1px solid #ddd;
            border-radius: 5px;
            overflow-y: scroll;
            padding: 10px;
            background-color: #f8f8f8;
            font-family: Arial, sans-serif;
            font-size: 14px;
            line-height: 1.5;
        }

        /* Style for user messages */
        .user-message {
            margin-bottom: 10px;
        }

        /* Style for chatbot messages */
        .chatbot-message {
            margin-bottom: 10px;
        }

        /* Style for message sender */
        .message-sender {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="messages-container"></div>
        <input type="text" id="user-input" placeholder="Type your message..." />
        <button id="send-button">Send</button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.24.0/axios.min.js"></script>
    <script>
        // OpenAI API configuration
        const apiKey = "YOUR_API_KEY"; // Replace with your OpenAI API key
        const apiUrl = "https://api.openai.com/v1/chat/completions"; // OpenAI model URL
        const model = "gpt-3.5-turbo";
        const temperature = 0.3;
        const maxTokens = 256;
        const messagesContainer = document.getElementById("messages-container");

        // Function to retrieve additional content from Google Docs
        function retrieveAdditionalContentFromDoc(message) {
            google.script.run.withSuccessHandler(handleAdditionalContent).retrieveAdditionalContentFromDoc(message);
        }

        // Function to handle additional content from Google Docs
        function handleAdditionalContent(content) {
            messagesContainer.innerHTML += `<p class="chatbot-message"><strong>Additional Content:</strong> ${content}</p>`;
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }



// Function to send a message to the OpenAI API and get a response
async function getChatbotResponse(message) {
  // Define the system instruction
  // const systemInstruction = "You are a helpful and insightful assistant that will answer the user's question, by retrieving the required information from the document";
  const response = await axios.post(apiUrl, {
    messages: [
      { role: "system", content: "You are a helpful and insightful assistant, that will answer specific user questions regarding the document content. / You will first greet the user, and then answer their questions. / You will be concise, but conversational. / If the user ask a specific question regarding the content of the document, retrieve the instructed and relevant information from the document. / If you don't find the answer in the content of the document that the user mentions, then you need to truthfully say that you don't know the answer. Remember that the provided info to the user is contained within the content of the document, and in order to answer, you will need to extract info from the same content."},
      { role: "user", content: message }
    ],
    model,
    temperature,
    max_tokens: maxTokens
  }, {
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${apiKey}`
    }
  });

  return response.data.choices[0].message.content;
}

// Function to handle user input and display the conversation
function handleUserInput() {
  const userInput = document.getElementById("user-input");
  const userMessage = userInput.value;

  // Display user message in the messages container
  messagesContainer.innerHTML += `<p class="user-message"><strong>Me:</strong> ${userMessage}</p>`;

  // Clear the input field
  userInput.value = "";

  // Check if the user's message is related to the document
  if (userMessage.toLowerCase().includes("Content")) {
    // Retrieve additional content from the embedded Google Doc
    const additionalContent = retrieveAdditionalContentFromDoc();

    // Display the additional content in the messages container
    messagesContainer.innerHTML += `<p class="chatbot-message"><strong>Additional Content:</strong> ${additionalContent}</p>`;
  } else {

  // Get the chatbot's response
  getChatbotResponse(userMessage)
    .then((response) => {
      // Display chatbot's response in the messages container
      messagesContainer.innerHTML += `<p class="chatbot-message"><strong>Assistant Richard:</strong> ${response}</p>`;

      // Scroll to the bottom of the messages container
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    })
    .catch((error) => {
      console.error("Error:", error);
    });
  }
}
        // Attach event listeners
        document.getElementById("send-button").addEventListener("click", handleUserInput);

        document.getElementById("user-input").addEventListener("keydown", (event) => {
            if (event.key === "Enter") {
                handleUserInput();
            }
        });
    </script>
</body>
</html>


